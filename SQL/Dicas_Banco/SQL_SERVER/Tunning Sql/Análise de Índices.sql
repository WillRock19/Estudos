--LISTAGEM 1 - TABELAS QUE MAIS SERIAM BENEFICIADAS COM NOVOS ÍNDICES
SELECT TOP 15
	AVG((AVG_TOTAL_USER_COST * AVG_USER_IMPACT *(USER_SEEKS + USER_SCANS))) AS IMPACTO
	,MID.OBJECT_ID
	,MID.STATEMENT AS TABELA
FROM SYS.DM_DB_MISSING_INDEX_GROUP_STATS AS MIGS
JOIN SYS.DM_DB_MISSING_INDEX_GROUPS AS MIG ON MIGS.GROUP_HANDLE = MIG.INDEX_GROUP_HANDLE
JOIN SYS.DM_DB_MISSING_INDEX_DETAILS AS MID ON MIG.INDEX_HANDLE = MID.INDEX_HANDLE AND DATABASE_ID = DB_ID()
GROUP BY
	MID.OBJECT_ID
	,MID.STATEMENT
ORDER BY
	IMPACTO DESC

--LISTAGEM 2 - TOP DOS ÍNDICES SUGERIDOS PELO SGBD
SELECT TOP 15
	(AVG_TOTAL_USER_COST * AVG_USER_IMPACT * (USER_SEEKS + USER_SCANS)) AS IMPACTO
	,MIGS.GROUP_HANDLE
	,MID.INDEX_HANDLE
	,MIGS.USER_SEEKS
	,MIGS.USER_SCANS
	,MID.OBJECT_ID
	,MID.STATEMENT
	,MID.EQUALITY_COLUMNS
	,MID.INEQUALITY_COLUMNS
	,MID.INCLUDED_COLUMNS
FROM SYS.DM_DB_MISSING_INDEX_GROUP_STATS AS MIGS
JOIN SYS.DM_DB_MISSING_INDEX_GROUPS AS MIG ON MIGS.GROUP_HANDLE = MIG.INDEX_GROUP_HANDLE
JOIN SYS.DM_DB_MISSING_INDEX_DETAILS AS MID ON MIG.INDEX_HANDLE = MID.INDEX_HANDLE AND DATABASE_ID = DB_ID()
--AND MID.OBJECT_ID = OBJECT_ID('TABELA') -- APENAS PARA UMA TABELA ESPECIFICA
ORDER BY
	IMPACTO DESC
 
--LISTAGEM 3 - ÍNDICES NUNCA UTILIZADOS PELO SGBD
SELECT
	TB.NAME AS TABLE_NAME
	,IX.NAME AS INDEX_NAME
	,IX.TYPE_DESC
	,LEAF_INSERT_COUNT
	,LEAF_DELETE_COUNT
	,LEAF_UPDATE_COUNT
	,NONLEAF_INSERT_COUNT
	,NONLEAF_DELETE_COUNT
	,NONLEAF_UPDATE_COUNT
FROM SYS.DM_DB_INDEX_USAGE_STATS VW
JOIN SYS.OBJECTS TB ON TB.OBJECT_ID = VW.OBJECT_ID
JOIN SYS.INDEXES IX ON IX.INDEX_ID = VW.INDEX_ID AND IX.OBJECT_ID = TB.OBJECT_ID
JOIN SYS.DM_DB_INDEX_OPERATIONAL_STATS(DB_ID(),NULL,NULL,NULL) VWX ON VWX.OBJECT_ID = TB.OBJECT_ID AND VWX.INDEX_ID = IX.INDEX_ID
WHERE
	VW.DATABASE_ID = DB_ID() AND VW.USER_SEEKS = 0 AND VW.USER_SCANS = 0 
AND VW.USER_LOOKUPS = 0 AND VW.SYSTEM_SEEKS = 0 AND VW.SYSTEM_SCANS = 0 AND VW.SYSTEM_LOOKUPS = 0
ORDER BY
	LEAF_INSERT_COUNT DESC, TB.NAME ASC, IX.NAME ASC

-- LISTAGEM 4 - Tabelas com maior quantidade de índices

select x.id, x.table_name, x.total_index, count(*) as total_column
from sys.columns cl
join(
select ix.object_id as id, tb.name as table_name, count(ix.object_id) as total_index
from sys.indexes ix
join sys.objects tb on tb.object_id = ix.object_id and tb.type = 'u'
group by ix.object_id, tb.name) x on x.id = cl.object_id
group by id, table_name, total_index
order by total_index desc

-- LISTAGEM 5 - Consultas que consome mais processamento

select top 10 (total_worker_time/execution_count) / 1000 as avg_cpu_time_ms,
substring(st.text,(qs.statement_start_offset/2)+1,
((case qs.statement_end_offset
when -1 then datalength(st.text) else qs.statement_end_offset end - qs.statement_start_offset)/2)+1) as statement_text,
execution_count, last_execution_time,
last_worker_time / 1000 as last_worker_time,
min_worker_time / 1000 as min_worker_time,
max_worker_time / 1000 as max_worker_time,
total_physical_reads, last_physical_reads,
min_physical_reads, max_physical_reads,
total_logical_writes, last_logical_writes,
min_logical_writes, max_logical_writes, query_plan
from sys.dm_exec_query_stats as qs
cross apply sys.dm_exec_sql_text(qs.sql_handle) as st
cross apply sys.dm_exec_text_query_plan(qs.plan_handle, default, default) as qp
order by 1 desc

-- LISTAGEM 6 - ANALISE DE IMPACTO NOS INDICES DE UMA TABELA
SELECT
	TB.NAME AS TABLE_NAME
	,IX.NAME AS INDEX_NAME
	,IX.TYPE_DESC
	,LEAF_INSERT_COUNT + LEAF_DELETE_COUNT + LEAF_UPDATE_COUNT + NONLEAF_INSERT_COUNT + NONLEAF_DELETE_COUNT + NONLEAF_UPDATE_COUNT AS IMPACTO
	,LEAF_INSERT_COUNT
	,LEAF_DELETE_COUNT
	,LEAF_UPDATE_COUNT
	,NONLEAF_INSERT_COUNT
	,NONLEAF_DELETE_COUNT
	,NONLEAF_UPDATE_COUNT
FROM SYS.DM_DB_INDEX_USAGE_STATS VW
JOIN SYS.OBJECTS TB ON TB.OBJECT_ID = VW.OBJECT_ID
JOIN SYS.INDEXES IX ON IX.INDEX_ID = VW.INDEX_ID AND IX.OBJECT_ID = TB.OBJECT_ID
JOIN SYS.DM_DB_INDEX_OPERATIONAL_STATS(DB_ID(),NULL,NULL,NULL) VWX ON VWX.OBJECT_ID = TB.OBJECT_ID AND VWX.INDEX_ID = IX.INDEX_ID
WHERE
	VW.DATABASE_ID = DB_ID() AND TB.NAME = 'ES_MOVIMENTOS'
ORDER BY
	IMPACTO DESC
	
-- LISTAGEM 7 - ÍNDICES MAIS UTILIZADOS NO BANCO
SELECT
	TB.NAME AS TABLE_NAME
	,IX.NAME AS INDEX_NAME
	,VW.USER_SEEKS
	,VW.USER_SCANS
	,VW.USER_LOOKUPS
	,VW.SYSTEM_SEEKS
	,VW.SYSTEM_SCANS
	,VW.SYSTEM_LOOKUPS
	,LEAF_INSERT_COUNT
	,LEAF_DELETE_COUNT
	,LEAF_UPDATE_COUNT
	,NONLEAF_INSERT_COUNT
	,NONLEAF_DELETE_COUNT
	,NONLEAF_UPDATE_COUNT
FROM SYS.DM_DB_INDEX_USAGE_STATS VW
JOIN SYS.OBJECTS TB ON TB.OBJECT_ID = VW.OBJECT_ID
JOIN SYS.INDEXES IX ON IX.INDEX_ID = VW.INDEX_ID AND IX.OBJECT_ID = TB.OBJECT_ID
JOIN SYS.DM_DB_INDEX_OPERATIONAL_STATS(DB_ID(),NULL,NULL,NULL) VWX ON VWX.OBJECT_ID = TB.OBJECT_ID AND VWX.INDEX_ID = IX.INDEX_ID
WHERE
	VW.DATABASE_ID = DB_ID()

-- LISTAGEM 8 - ÍNDICES MENOS UTILIZADOS X ÍNDICES MAIS PESADOS
SELECT
	TB.NAME AS TABLE_NAME
	,IX.NAME AS INDEX_NAME
	,IX.TYPE_DESC
	,LEAF_INSERT_COUNT
	,LEAF_UPDATE_COUNT
	,NONLEAF_INSERT_COUNT
	,VW.USER_SEEKS+VW.USER_SCANS+VW.USER_LOOKUPS+VW.SYSTEM_SEEKS+VW.SYSTEM_SCANS+VW.SYSTEM_LOOKUPS TOTAL_SCAN
	,VW.USER_SEEKS
	,VW.USER_SCANS
	,VW.USER_LOOKUPS
	,VW.SYSTEM_SEEKS
	,VW.SYSTEM_SCANS
	,VW.SYSTEM_LOOKUPS
FROM SYS.DM_DB_INDEX_USAGE_STATS VW
JOIN SYS.OBJECTS TB ON TB.OBJECT_ID = VW.OBJECT_ID
JOIN SYS.INDEXES IX ON IX.INDEX_ID = VW.INDEX_ID AND IX.OBJECT_ID = TB.OBJECT_ID
JOIN SYS.DM_DB_INDEX_OPERATIONAL_STATS(DB_ID(),NULL,NULL,NULL) VWX ON VWX.OBJECT_ID = TB.OBJECT_ID AND VWX.INDEX_ID = IX.INDEX_ID
WHERE
	VW.DATABASE_ID = DB_ID() AND IX.TYPE_DESC = 'NONCLUSTERED' --AND TB.NAME LIKE 'PC_%' 
ORDER BY
LEAF_INSERT_COUNT + NONLEAF_INSERT_COUNT DESC, TOTAL_SCAN
--	VW.USER_SEEKS + VW.USER_SCANS + VW.USER_LOOKUPS + VW.SYSTEM_SEEKS + VW.SYSTEM_SCANS + VW.SYSTEM_LOOKUPS
